<!--
    $Id: pom.xml,v 1.72 2017/08/13 18:04:10 oboehm Exp $

	Project Object Model (POM) for Maven
	If you are behind a proxy try the following command:
		'mvn -Dhttp.proxyHost=10.253.1.158 -Dhttp.proxyPort=8080 validate'
	Instead of 'validate' you can use also another goal. The following goals
	should work (see also iX 2/2006, p.77):
		validate
		generate-sources
		install
	
	Some other useful goals are:
	    jar
	    source:jar
	    source:test-jar
	
	PS: If you want to update the maven plugins use the option -U.

	see http://maven.apache.org/guides/introduction/introduction-to-the-pom.html
	see http://maven.apache.org/pom.htm
	
    (c)reated 24-Mar-09 by ob@aosd.de
	last up$Date: 2017/08/13 18:04:10 $ by $Author: oboehm $
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>org.patterntesting</groupId>
    <artifactId>patterntesting-check</artifactId>
    <version>2.0.0-SNAPSHOT</version>
  </parent>
	
  <!-- 
      The Basics
      must be set if you want to upload it to the Central Repository
      see http://maven.apache.org/guides/mini/guide-central-repository-upload.html
   -->	
  <modelVersion>4.0.0</modelVersion>
  <artifactId>patterntesting-check-rt</artifactId>
  <packaging>jar</packaging>
  <name>patterntesting-check-rt</name>
  <!-- see http://maven.apache.org/pom.html#Licenses -->
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <inceptionYear>2002</inceptionYear>
  <description>
    PatternTesting Check.RT (patterntesting-check-rt) provides different runtime
    checks of known anti patterns (like using null values as arguments or
    return values) but provides also a test framework for better testing.
  </description>
  
  <url>http://patterntesting.org/release/check/rt/</url>

  <distributionManagement>
    <site>
        <id>ftp-patterntesting.org</id>
        <name>PatternTesting Website</name>
        <url>${patterntesting.site.url}/${project.version}/check/rt/</url>
    </site>
  </distributionManagement>

  <scm>
    <connection>scm:cvs:pserver:anonymous@patterntesting.cvs.sourceforge.net:/cvsroot/patterntesting:PatternTesting10/patterntesting-check-rt</connection>
    <url>http://patterntesting.cvs.sourceforge.net/viewvc/patterntesting/PatternTesting10/patterntesting-check-rt/</url>
    <tag>patterntesting-1_3_0</tag>
  </scm>

  <developers>
    <developer>
      <name>Vincent Massol</name>
      <id>vmassol</id>
      <email>vmassol@pivolis.com</email>
      <organization>Pivolis</organization>
      <roles>
        <role>Java Developer</role>
      </roles>
    </developer>
    <developer>
      <name>Matt Smith</name>
      <id>ojojo</id>
      <email>matt@ojojo.com</email>
      <organization>ojojo</organization>
      <roles>
        <role>Java Developer</role>
      </roles>
    </developer>
    <developer>
      <name>Oliver Boehm</name>
      <id>oboehm</id>
      <email>ob@aosd.de</email>
      <url>http://www.aosd.de/</url>
      <organization>agentes AG</organization>
      <organizationUrl>http://www.agentes.de</organizationUrl>
      <roles>
        <role>Java Developer</role>
      </roles>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>Shohara Shaikh</name>
      <email />
      <organization>KPIT Cummins</organization>
      <roles>
        <role>Java Devleoper</role>
      </roles>
    </contributor>
  </contributors>
  
  <!-- 
      General Properties
      (see parent POM)
   -->
  <properties>
    <patterntesting.site.artifact.dir>${patterntesting.site.dir}/check/rt/</patterntesting.site.artifact.dir>
  </properties> 

  <!-- Libraries -->
  <dependencies>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
  </dependencies>

  <!-- Build Settings -->
  <build>
    <extensions>
      <!-- Enabling the use of FTP -->
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
         <artifactId>wagon-ftp</artifactId>
      </extension>
    </extensions>
    <plugins>
	  <!-- see http://maven.apache.org/plugins/maven-surefire-plugin/examples/inclusion-exclusion.html -->
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
	  </plugin>
	  <!-- see http://maven.apache.org/plugins/maven-source-plugin/usage.html -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- 
          provide it as bundle
          see http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html
       -->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Import-Package>
              *
            </Import-Package>
            <Export-Package>
              patterntesting.check.runtime,
              patterntesting.check.runtime.*
            </Export-Package>
          </instructions>
        </configuration>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>    
              <goal>manifest</goal>
            </goals>   
          </execution>
        </executions>
      </plugin>
      <!--
          see "Adding OSGi metadata to existing projects without changing the packaging type"
          (http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html)
       -->
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>  
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive> 
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>local-site</id>
      <activation>
        <file>
          <exists>${patterntesting.site.dir}</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <!--
              copy reports
              
              ask Ant to do some jobs for us
              @see http://maven.apache.org/plugins/maven-antrun-plugin/usage.html
              @see http://maven.apache.org/settings.html / Properties
           -->
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <phase>site</phase>
                <configuration>
                  <tasks name="install.reports" description="copy reports to local site">
                    <!--
                      Place any ant task here. You can add anything
                      you can add between <target> and </target> in a
                      build.xml.
                    -->
                    <echo>copying reports...</echo>
                    <copy todir="${patterntesting.site.dir}/check/rt/" verbose="false">
                      <fileset dir="target/site" />
                    </copy>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
