<?xml version="1.0"?>
<document>

  <properties>
    <title>Was ist PatternTesting-Check.CT?</title>
    <author email="ob@aosd.de">Vincent Massol</author>
  </properties>

  <body>

    <section name="Einf&#252;hrung">
      <p>
        Jedes Projekt definiert ein Set an Regeln, mit den alle
        (oder die meisten :-)) Entwickler &#252;bereinstimmen.
        Diese Regeln k&#246;nnen Codier-Richtlinien, Namenskonventionen
        oder, auf einem h&#246;heren Level, Archtiktur-Entscheidungen
        oder Best Practices sein.
      </p>
      <p>
        Normalerweise werden diese Richtlinien verbal ausgetauscht oder in
        einem "Entwickler Handbuch" niedergeschrieben (z.B. in einem internen
        Wiki). Doch das reicht meistens nicht aus. Wie kann ich sicherstellen,
        dass ich diese Richtlinen auch eingehalten habe?
      </p>
      <p>
        Im Wesentlichen gibt es hier nur eine L&#246;sung: Code Review.
        Sei es, als st&#228;ndiger Prozess im Rahmen von Pair Programming oder
        zu bestimmten Zeiten mit Kollegen oder Spezialisten, die dieses Review
        durchf&#252;hren.
        W&#228;re es nicht sch&#246;n, wenn man eine Test-Suite h&#228;tte, die
        dies automatisch verifizieren k&#246;nnte? Genau so, wie man die
        Richtigkeit des Codes verifiziert? Nur, dass mit der &#220;berpr&#252;fung
        des Codes auch gleichzeitig die Einhaltung von Programmier-Emfpehoungen
        einhergeht!
      </p>
      <p>
        Es gibt verschiedene Tools, die Coding-Richtlinien und Namens-Konventionen
        &#252;berpr&#252;fen, aber keine davon &#252;berpr&#252;fen
        Architektur- und Design-Emfpehlungen.
      </p>
      <p>
        ... bis jetzt ....
      </p>
      <p>
        Eine der Ziele von Pattern Testing is die
        <strong>automatische</strong> &#220;berpr&#252;fung von
        Architektur-/Design-/Implementierungs-Entscheidungen.
        PatternTesting-Check.RT ist dabei der Teil, der zur Laufzeit
        stattfindet.
      </p>
            
    </section>

    <section name="Einige Beispiele">

      <p>
        Hier einige Beispiele von automatischen &#220;berpr&#252;fungen,
        die das PatternTesting-Check.RT-Framework erlaubt:
      </p>
      <ul>
        <li>
          Garantiere, dass kein Methoden-Aufruf <code>null</code> als
          Parameter &#252;bergeben bekommt.
        </li>
        <li>
          Garantiere, dass keine Methode <code>null</code> als
          R&#252;ckgabewert zur&#252;ckliefert.
        </li>
      </ul>

      <p>
        Die M&#246;glichkeiten sind schier endlos...
      </p>
      
    </section>

  </body>

</document>
